/* code generated by orbit */
package api

import (
	"net"
	"github.com/desertbit/orbit/internal/control"
	"errors"
	"time"
)

//##############//
//### Errors ###//
//##############//

const (
	ErrCodeNotFound = 1
	ErrCodeDatasetDoesNotExist = 2
)
var (
	ErrNotFound = errors.New("not found")
	orbitErrNotFound = control.Err(
		ErrNotFound,
		ErrNotFound.Error(),
		ErrCodeNotFound,
	)
	
	ErrDatasetDoesNotExist = errors.New("dataset does not exist")
	orbitErrDatasetDoesNotExist = control.Err(
		ErrDatasetDoesNotExist,
		ErrDatasetDoesNotExist.Error(),
		ErrCodeDatasetDoesNotExist,
	)
	
)

//#############//
//### Types ###//
//#############//

type Char struct {
	lol string
}

type Plate struct {
	name string
	rect *Rect
	test map[int]*Rect
	test2 []*Rect
	test3 []float32
	test4 map[string]map[int][]*Rect
	ts time.Time
	version int
}

type Rect struct {
	c *Char
	x1 float32
	x2 float32
	y1 float32
	y2 float32
}

type Test3Args struct {
	c map[int][]*Rect
	i int
	v float64
}

type Test3Ret struct {
	lol string
}

//################//
//### Services ###//
//################//

// Example  ---------------------
const (
	Test = "Test"
	Test2 = "Test2"
	Test3 = "Test3"
	Test4 = "Test4"
	Hello = "Hello"
	Hello2 = "Hello2"
	Hello3 = "Hello3"
)

type ExampleConsumerCaller interface {
	// Calls
	Test(args *Plate) (ret *Rect, err error)
	Test2(args *Rect) (err error)
	// Streams
	Hello(conn net.Conn) (err error)
	Hello2(conn net.Conn) (err error)
}
type ExampleConsumerHandler interface {
	// Calls
	Test3(args *Test3Args) (ret *Test3Ret, err error)
	Test4() (ret *Rect, err error)
	// Streams
	Hello3(conn net.Conn) (err error)
}
type ExampleProviderCaller interface {
	// Calls
	Test3(args *Test3Args) (ret *Test3Ret, err error)
	Test4() (ret *Rect, err error)
	// Streams
	Hello3(conn net.Conn) (err error)
}
type ExampleProviderHandler interface {
	// Calls
	Test(args *Plate) (ret *Rect, err error)
	Test2(args *Rect) (err error)
	// Streams
	Hello(conn net.Conn) (err error)
	Hello2(conn net.Conn) (err error)
}
type exampleConsumer struct {
	h ExampleConsumerHandler
	ctrls [2]*control.Control
}

func (v1 *exampleConsumer) Test(args *Plate) (ret *Rect, err error) {
	ctx, err := v1.ctrls[0].Call(Test, args)
	if err != nil {
		return
	}
	err = ctx.Decode(ret)
	if err != nil {
		return
	}
	return
}

func (v1 *exampleConsumer) Test2(args *Rect) (err error) {
	_, err = v1.ctrls[1].Call(Test2, args)
	if err != nil {
		return
	}
	return
}

type exampleProvider struct {
	h ExampleProviderHandler
	ctrls [2]*control.Control
}

func (v1 *exampleProvider) Test3(args *Test3Args) (ret *Test3Ret, err error) {
	ctx, err := v1.ctrls[0].Call(Test3, args)
	if err != nil {
		return
	}
	err = ctx.Decode(ret)
	if err != nil {
		return
	}
	return
}

func (v1 *exampleProvider) Test4() (ret *Rect, err error) {
	ctx, err := v1.ctrls[1].Call(Test4, nil)
	if err != nil {
		return
	}
	err = ctx.Decode(ret)
	if err != nil {
		return
	}
	return
}

// ---------------------


