service s1 {
    call c1 {
        args: int
        ret: float32
    }
    call c2 {
        async
        args: time
        ret: []map[string][]Ret
    }
    call c3 {}

    revcall rc1 {
        args: Args
        ret: {
            s string
            i int
            m map[string]int
            sl []time
            st Ret
            crazy map[string][][]map[string]En1
        }
    }
    revcall rc2 {
        async
        args: {
            f float64
            b byte
            u8 uint8
            u16 uint16
            u32 uint32
            u64 uint64
        }
    }
    revcall rc3 {}

    stream s1 {}
    stream s2 {
        args: string
    }
    stream s3 {
        ret: En1
    }

    revstream rs1 {
        args: Args
        ret: Ret
    }
    revstream rs2 {
        args: map[string]int
    }
    revstream rs3 {}
}

type Args {
    s string
    i int
    m map[string]int
    sl []time
    st Ret
    crazy map[string][][]map[string]En1
}

type Ret {
    f float64
    b byte
    u8 uint8
    u16 uint16
    u32 uint32
    u64 uint64
}

enum En1 {
    Val1 = 1
    Val2 = 2
    Val3 = 3
}

errors {
    theFirstError = 1
    theSecondError = 2
    theThirdError = 3
}